version: '2'

volumes:
  data.postgres:
    driver: "local"
  data.opennms:
    driver: "local"
  data.graylog.es.01:
    driver: local

networks:
  net.dc:
      driver: bridge
      ipam:
        config:
          - subnet: 172.30.0.0/16
  net.branch:
      driver: bridge
      ipam:
        config:
          - subnet: 192.168.1.0/24
services:
  database:
    image: postgres:9.6.1
    container_name: database
    env_file:
      - .postgres.env
    environment:
      - TZ=Europe/Berlin
    ports:
      - "5432:5432"
    volumes:
      - data.postgres:/var/lib/postgresql/data
    networks:
      net.dc:
        ipv4_address: 172.30.0.10

  opennms:
    image: opennms/horizon-core-web:20.0.1-1
    container_name: horizon-core-web
    mem_limit: 3072M
    cap_add:
      - NET_ADMIN
    networks:
      net.dc:
        ipv4_address: 172.30.0.11
    env_file:
      - .opennms.env
      - .postgres.env
    environment:
      - TZ=Europe/Berlin
    depends_on:
      - database
    volumes:
      - data.opennms:/opennms-data
      - ./etc:/opt/opennms/etc
    command: ["-s"]
    ports:
      - "8980:8980"
      - "18980:18980"
      - "1099:1099"
      - "8101:8101"
      - "61616:61616"
      - "5817:5817"
      - "162:162/udp"

  grafana:
    image: opennms/helm-app
    container_name: grafana
    networks:
      net.dc:
        ipv4_address: 172.30.0.9
    environment:
      - TZ=Europe/Berlin
    env_file:
      - .grafana.env
    ports:
      - "3000:3000"

  minion:
    image: opennms/minion:20.0.1-1
    container_name: minion
    networks:
      net.dc:
        ipv4_address: 172.30.0.12
      net.branch:
        ipv4_address: 192.168.1.10
    env_file:
      - .minion.env
    command: ["-f"]
    ports:
      - "8201:8201"
      - "18980"
      - "162/udp"
      - "514/udp"

  dc.srv.01:
    image: indigo/docker-netsnmp
    container_name: dc.srv.01
    networks:
      net.dc:
        ipv4_address: 172.30.0.32
    environment:
      - TZ=Europe/Berlin
    ports:
      - "161/udp"

  dc.srv.02:
    image: indigo/docker-netsnmp
    container_name: dc.srv.02
    networks:
      net.dc:
        ipv4_address: 172.30.0.33
    environment:
      - TZ=Europe/Berlin
    ports:
      - "161/udp"

  dc.web.01:
    image: httpd
    container_name: dc.web.01
    networks:
      net.dc:
        ipv4_address: 172.30.0.34
    environment:
      - TZ=Europe/Berlin
    ports:
      - "80"

  branch.srv.01:
    image: indigo/docker-netsnmp
    container_name: branch.srv.01
    networks:
      net.branch:
        ipv4_address: 192.168.1.100
    environment:
      - TZ=Europe/Berlin
    ports:
      - "161/udp"

  branch.srv.02:
    image: indigo/docker-netsnmp
    container_name: branch.srv.02
    networks:
      net.branch:
        ipv4_address: 192.168.1.101
    environment:
      - TZ=Europe/Berlin
    ports:
      - "161/udp"

  branch.web.01:
    image: httpd
    container_name: branch.web.01
    networks:
      net.branch:
        ipv4_address: 192.168.1.102
    environment:
      - TZ=Europe/Berlin
    ports:
      - "80"
